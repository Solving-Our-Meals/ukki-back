<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.ukki.store.model.dao.StoreMapper">

<!--    <resultMap id="storeInfoResultMap" type="com.ohgiraffers.ukki.store.model.dto.StoreInfoDTO">-->
<!--        <id property="storeNo" column="STORE_NO"/>-->
<!--        <result property="storeName" column="STORE_NAME"/>-->
<!--        <result property="storeDes" column="STORE_DES"/>-->
<!--        <result property="storeAddress" column="STORE_ADDRESS"/>-->
<!--        <result property="latitude" column="LATITUDE"/>-->
<!--        <result property="longitude" column="LONGITUDE"/>-->
<!--        <result property="storeProfile" column="STORE_PROFILE"/>-->
<!--        <result property="storeMenu" column="STORE_MENU"/>-->
<!--        <result property="storeCategoryNo" column="STORE_CATEGORY_NO"/>-->
<!--        <result property="userNo" column="USER_NO"/>-->
<!--        <result property="posNumber" column="POS_NUMBER"/>-->
<!--    </resultMap>-->


    <resultMap id="storeInfoResultMap" type="com.ohgiraffers.ukki.store.model.dto.StoreInfoDTO">
        <id property="storeNo" column="STORE_NO"/>
        <result property="storeName" column="STORE_NAME"/>
        <result property="storeDes" column="STORE_DES"/>
        <result property="storeAddress" column="STORE_ADDRESS"/>
        <result property="latitude" column="LATITUDE"/>
        <result property="longitude" column="LONGITUDE"/>
        <result property="storeProfile" column="STORE_PROFILE"/>
        <result property="storeMenu" column="STORE_MENU"/>
        <result property="storeCategoryNo" column="STORE_CATEGORY_NO"/>
        <result property="posNumber" column="POS_NUMBER"/>
        <association property="storeKeyword" javaType="com.ohgiraffers.ukki.store.model.dto.KeywordDTO">
            <result property="keyword1" column="KEYWORD1"/>
            <result property="keyword2" column="KEYWORD2"/>
            <result property="keyword3" column="KEYWORD3"/>
            <result property="keyword4" column="KEYWORD4"/>
            <result property="keyword5" column="KEYWORD5"/>
            <result property="keyword6" column="KEYWORD6"/>
        </association>
    </resultMap>


    <resultMap id="keywordResultMap" type="com.ohgiraffers.ukki.store.model.dto.KeywordDTO">
        <id property="storeNo" column="STORE_NO"/>
        <result property="keyword1" column="KEYWORD1"/>
        <result property="keyword2" column="KEYWORD2"/>
        <result property="keyword3" column="KEYWORD3"/>
        <result property="keyword4" column="KEYWORD4"/>
        <result property="keyword5" column="KEYWORD5"/>
        <result property="keyword6" column="KEYWORD6"/>
    </resultMap>

    <resultMap id="operationResultMap" type="com.ohgiraffers.ukki.store.model.dto.OperationDTO">
        <id property="storeNo" column="STORE_NO"/>
        <result property="monday" column="MONDAY"/>
        <result property="tuesday" column="TUESDAY"/>
        <result property="wednesday" column="WEDNESDAY"/>
        <result property="thursday" column="THURSDAY"/>
        <result property="friday" column="FRIDAY"/>
        <result property="saturday" column="SATURDAY"/>
        <result property="sunday" column="SUNDAY"/>
        <result property="breakTime" column="BREAK_TIME"/>
    </resultMap>

    <resultMap id="bannerResultMap" type="com.ohgiraffers.ukki.store.model.dto.BannerDTO">
        <id property="storeNo" column="STORE_NO"/>
        <result property="banner1" column="BANNER1"/>
        <result property="banner2" column="BANNER2"/>
        <result property="banner3" column="BANNER3"/>
        <result property="banner4" column="BANNER4"/>
        <result property="banner5" column="BANNER5"/>
    </resultMap>

    <resultMap id="getReviewInfoResultMap" type="com.ohgiraffers.ukki.store.model.dto.ReviewDTO">
        <id property="storeNo" column="STORE_NO"/>
        <result property="reviewCount" column="REVIEW_COUNT"/>
        <collection property="reviewList" resultMap="reviewListResultMap"/>
    </resultMap>

    <resultMap id="reviewListResultMap" type="com.ohgiraffers.ukki.store.model.dto.ReviewContentDTO">
        <id property="reviewNo" column="REVIEW_NO"/>
        <result property="reviewContent" column="REVIEW_CONTENT"/>
        <result property="reviewImage" column="REVIEW_IMG"/>
        <result property="reviewDate" column="REVIEW_DATE"/>
        <result property="reviewScope" column="REVIEW_SCOPE"/>
        <result property="userNo" column="USER_NO"/>
        <result property="userName" column="USER_NAME"/>
        <result property="userProfile" column="USER_PROFILE"/>
        <result property="reportCount" column="REPORT_COUNT"/>
        <result property="resNo" column="RES_NO"/>
    </resultMap>

    <resultMap id="reservationInfoDTOResultMap" type="com.ohgiraffers.ukki.store.model.dto.ReservationInfoDTO">
        <id property="resNo" column="RES_NO"/>
        <result property="resDate" column="RES_DATE"/>
        <result property="resTime" column="RES_TIME"/>
        <result property="isRandom" column="IS_RANDOM"/>
        <result property="userNo" column="USER_NO"/>
        <result property="storeNo" column="STORE_NO"/>
        <result property="qrConfirm" column="QR_CONFIRM"/>
        <result property="qr" column="QR"/>
    </resultMap>

    <resultMap id="resPosNumByDay" type="com.ohgiraffers.ukki.store.model.dto.DayResPosNumDTO">
        <result property="operTime" column="OPER_TIME"/>
        <result property="resPosNum" column="RES_POS_NUMBER"/>
    </resultMap>

    <resultMap id="popularSearchResultMap" type="com.ohgiraffers.ukki.user.model.dto.SearchDTO">
        <result property="searchWord" column="SEARCH_WORD"/>
        <result property="searchCount" column="SEARCH_COUNT"/>
    </resultMap>



    <!-- 예약 가능한 시간 가져오기 -->
    <select id="getNextAvailableTime" resultMap="reservationInfoDTOResultMap">
        SELECT RES_TIME
        FROM RESERVATIONS
        WHERE STORE_NO = #{storeNo}
        AND RES_DATE = #{resDate}
        AND RES_TIME > #{currentTime}
        ORDER BY RES_TIME ASC
        LIMIT 1
    </select>

    <!--  가게 정보  -->
    <select id="getStoreInfo"  resultMap="storeInfoResultMap" parameterType="long">
        SELECT
               STORE_NO
             , STORE_NAME
             , STORE_DES
             , STORE_ADDRESS
             , LATITUDE
             , LONGITUDE
             , STORE_PROFILE
             , STORE_MENU
             , STORE_CATEGORY_NO
             , USER_NO
             , POS_NUMBER
          FROM TBL_STORE
         WHERE STORE_NO = #{storeNo}
        <!-- 검색 페이지 만들어지면 pathvariable로 변경하기-->
    </select>

    <!--  가게 키워드  -->
    <select id="getKeyword" parameterType="long" resultMap="keywordResultMap">
        SELECT
               STORE_NO
             , KEYWORD1
             , KEYWORD2
             , KEYWORD3
             , KEYWORD4
             , KEYWORD5
             , KEYWORD6
          FROM TBL_KEYWORD
         WHERE STORE_NO = #{storeNo}
        <!-- 검색 페이지 만들어지면 pathvariable로 변경하기 -->
    </select>

    <!--  운영 시간 불러오기  -->
    <select id="getOperation" parameterType="long" resultMap="operationResultMap">
        SELECT
               *
          FROM TBL_OPERATION
         WHERE STORE_NO = #{storeNo}
        <!-- 검색 페이지 만들어지면 pathvariable로 변경하기-->
    </select>

    <!--  배너 불러오기  -->
    <select id="getBannerList" parameterType="long" resultMap="bannerResultMap">
        SELECT
               STORE_NO
             , BANNER1
             , BANNER2
             , BANNER3
             , BANNER4
             , BANNER5
          FROM TBL_BANNER
         WHERE STORE_NO = #{storeNo}
    </select>

    <!-- 리뷰 정보 가져오기 / 최신순 -->
    <select id="getReviewList" parameterType="long" resultMap="getReviewInfoResultMap">
        SELECT
               A.STORE_NO
             , (SELECT
                       COUNT(*)
                  FROM TBL_REVIEW
                 WHERE STORE_NO = A.STORE_NO ) AS REVIEW_COUNT
             , A.REVIEW_NO
             , A.REVIEW_CONTENT
             , A.REVIEW_IMG
             , A.REVIEW_DATE
             , A.REVIEW_SCOPE
             , A.USER_NO
             , B.USER_NAME
             , B.USER_PROFILE
             , A.REPORT_COUNT
             , A.RES_NO
          FROM TBL_REVIEW A
          JOIN TBL_USER B ON A.USER_NO = B.USER_NO
         WHERE A.STORE_NO = #{storeNo}
         ORDER BY REVIEW_NO DESC;
    </select>

    <!-- 리뷰 정보 가져오기 / 별점순 -->
    <select id="getReviewListByScope" parameterType="long" resultMap="getReviewInfoResultMap">
        SELECT
                A.STORE_NO
              , (SELECT
                        COUNT(*)
                   FROM TBL_REVIEW
                  WHERE STORE_NO = A.STORE_NO ) AS REVIEW_COUNT
             , A.REVIEW_NO
             , A.REVIEW_CONTENT
             , A.REVIEW_IMG
             , A.REVIEW_DATE
             , A.REVIEW_SCOPE
             , A.USER_NO
             , B.USER_NAME
             , B.USER_PROFILE
             , A.REPORT_COUNT
             , A.RES_NO
          FROM TBL_REVIEW A
          JOIN TBL_USER B ON A.USER_NO = B.USER_NO
         WHERE A.STORE_NO = #{storeNo}
        ORDER BY A.REVIEW_SCOPE DESC, A.REVIEW_DATE DESC;
    </select>

    <select id="getReviewListByLowScope" parameterType="long" resultMap="getReviewInfoResultMap">
        SELECT
               A.STORE_NO
             , (SELECT
                       COUNT(*)
                  FROM TBL_REVIEW
                 WHERE STORE_NO = A.STORE_NO ) AS REVIEW_COUNT
             , A.REVIEW_NO
             , A.REVIEW_CONTENT
             , A.REVIEW_IMG
             , A.REVIEW_DATE
             , A.REVIEW_SCOPE
             , A.USER_NO
             , B.USER_NAME
             , B.USER_PROFILE
             , A.REPORT_COUNT
             , A.RES_NO
          FROM TBL_REVIEW A
          JOIN TBL_USER B ON A.USER_NO = B.USER_NO
         WHERE A.STORE_NO = #{storeNo}
         ORDER BY A.REVIEW_SCOPE, A.REVIEW_DATE DESC;
    </select>


    <!-- 리뷰 이미지 순서 정하기 위한 리뷰이미지 갯수 가져오기 -->
    <select id="getReviewCount" parameterType="String">
        SELECT
               COUNT(REVIEW_IMG)
          FROM TBL_REVIEW
         WHERE REVIEW_DATE = #{today}
    </select>

    <!-- 리뷰 등록하기 -->
    <insert id="createReview" parameterType="com.ohgiraffers.ukki.store.model.dto.ReviewContentDTO">
        INSERT INTO TBL_REVIEW
        (
            REVIEW_CONTENT
          , REVIEW_IMG
          , REVIEW_DATE
          , REVIEW_SCOPE
          , STORE_NO
          , USER_NO
          , RES_NO
        )
        VALUES
        (
            #{ reviewContent }
          , #{ reviewImage }
          , #{ reviewDate }
          , #{ reviewScope }
          , #{ storeNo }
          , #{ userNo }
          , #{ resNo }
        )
    </insert>

    <delete id="deleteReview" parameterType="long">
        DELETE FROM TBL_REVIEW
         WHERE REVIEW_NO = #{ reviewNo }
    </delete>

    <!-- 리뷰 작성 권한을 위한 예약 내역 조회 -->
    <select id="getUserReviewList" parameterType="map" resultMap="reservationInfoDTOResultMap">
        SELECT
               A.RES_NO
             , A.RES_DATE
             , A.RES_TIME
             , A.IS_RANDOM
             , A.USER_NO
             , A.STORE_NO
             , A.QR_CONFIRM
             , A.QR
          FROM TBL_RESERVATION A
         WHERE A.USER_NO = (SELECT
                                   USER_NO
                              FROM TBL_USER
                             WHERE USER_ID = #{ userId })
               AND
               A.STORE_NO = #{ storeNo }
    </select>

    <select id="checkReviewList" parameterType="long" resultType="boolean">
        SELECT CASE
                    WHEN EXISTS
                                ( SELECT
                                         *
                                    FROM TBL_REVIEW
                                   WHERE RES_NO = #{ resNo })THEN FALSE
                    ELSE TRUE
                END AS result;
    </select>

    <!-- 리뷰 작성 완료 시 유저 활동 + 1 -->
    <update id="increaseReview" parameterType="long">
        UPDATE TBL_USER_ACT_INFO
           SET REVIEW_COUNT = REVIEW_COUNT + 1
         WHERE USER_NO = #{ userNo }
    </update>

    <!-- 리뷰 삭제 완료 시 유저 활동 - 1 -->
    <update id="decreaseReview" parameterType="long">
        UPDATE TBL_USER_ACT_INFO
           SET REVIEW_COUNT = REVIEW_COUNT - 1
         WHERE USER_NO = #{ userNo }
    </update>


    <!-- 요일별, 시간별 예약 가능 인원 조회 -->
    <select id="getResPosNum" parameterType="com.ohgiraffers.ukki.store.model.dto.StoreResPosNumDTO" resultMap="resPosNumByDay">
        SELECT DISTINCT
               A.OPER_TIME
             , IFNULL(B.RES_POS_NUMBER, A.POS_NUMBER)
                    - IFNULL((
                                SELECT COUNT(1)
                                  FROM TBL_RESERVATION A_2
                                 WHERE A.STORE_NO = A_2.STORE_NO
                                   AND A.OPER_TIME = DATE_FORMAT(A_2.RES_TIME, '%H:%i')
                            ),0) AS RES_POS_NUMBER
          FROM ${day} A
          LEFT
          JOIN TBL_RES_POS_NUMBER B
            ON A.STORE_NO = B.STORE_NO
           AND A.OPER_TIME = DATE_FORMAT(B.R_OPER_TIME, '%H:%i')
           AND DATE_FORMAT(B.R_DATE,'%Y-%m-%d') = #{date}
         WHERE A.STORE_NO = #{storeNo};
    </select>

    <!-- 리뷰 삭제 시 리뷰 이미지 불러오기(드라이브에서 삭제할 리뷰 이미지 이름 가져오기) -->
    <select id="getReviewContent" parameterType="long" resultMap="reviewListResultMap">
        SELECT
               *
          FROM TBL_REVIEW
         WHERE REVIEW_NO = #{ reviewNo }
    </select>

    <!-- 메인 -->

    <select id="getSearchInfo" resultMap="storeInfoResultMap" parameterType="com.ohgiraffers.ukki.store.model.dto.StoreInfoDTO">
        SELECT
        STORE_NO,
        STORE_NAME,
        STORE_DES,
        STORE_ADDRESS,
        STORE_PROFILE,
        STORE_CATEGORY_NO,
        POS_NUMBER
        FROM TBL_STORE
        WHERE STORE_NAME LIKE CONCAT('%', #{storeName}, '%')
    </select>

    <select id="searchStores" resultMap="storeInfoResultMap" parameterType="java.lang.String">
        SELECT
        A.STORE_NO,
        A.STORE_NAME,
        A.STORE_DES,
        A.STORE_ADDRESS,
        A.STORE_PROFILE,
        A.STORE_CATEGORY_NO,
        A.POS_NUMBER,
        B.KEYWORD1,
        B.KEYWORD2,
        B.KEYWORD3,
        B.KEYWORD4,
        B.KEYWORD5,
        B.KEYWORD6
        FROM TBL_STORE A
        JOIN TBL_KEYWORD B ON A.STORE_NO = B.STORE_NO
        WHERE A.STORE_NAME LIKE CONCAT('%', #{storeName}, '%')
        AND (#{storeName} IS NOT NULL AND #{storeName} != '')
    </select>




    <insert id="insertOrUpdateSearch" parameterType="String">
        INSERT INTO
        TBL_SEARCH
        (
        SEARCH_WORD,
        SEARCH_COUNT
        )
        VALUES
        (
        #{storeName}, 1
        )
        ON DUPLICATE KEY UPDATE SEARCH_COUNT = SEARCH_COUNT + 1;
    </insert>



    <select id="getPopularSearches" resultMap="popularSearchResultMap">
        SELECT
        SEARCH_WORD,
        SEARCH_COUNT
        FROM TBL_SEARCH
        ORDER BY SEARCH_COUNT DESC
        LIMIT 10;
    </select>


</mapper>
